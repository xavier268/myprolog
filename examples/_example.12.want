Test name : TestExamples
This file : _example.12.want


Input:

		// define reverse a list of numbers
		reverse_list(List, Reversed) 				:-		reverse_list(List, [], Reversed).
		reverse_list([], Acc, Acc).
		reverse_list([Head|Tail], Acc, Reversed) 	:-		reverse_list(Tail, [Head|Acc], Reversed).		
		// query
		?- reverse_list([1,2,3,4], Reversed).
		


----------
Solution:	[Reversed = [4, 3, 2, 1]]
Because of : 
rule#1>	reverse_list(List, Reversed) :- reverse_list(List, [], Reversed) 
rule#3>	reverse_list([Head|Tail], Acc, Reversed) :- reverse_list(Tail, [Head|Acc], Reversed) 
rule#3>	reverse_list([Head|Tail], Acc, Reversed) :- reverse_list(Tail, [Head|Acc], Reversed) 
rule#3>	reverse_list([Head|Tail], Acc, Reversed) :- reverse_list(Tail, [Head|Acc], Reversed) 
rule#3>	reverse_list([Head|Tail], Acc, Reversed) :- reverse_list(Tail, [Head|Acc], Reversed) 
rule#2>	reverse_list([], Acc, Acc) :-  


State:	<nil>
