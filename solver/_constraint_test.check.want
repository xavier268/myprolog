
========= Single constraint test =========


0	<nil>

1	(original)	 = 0
1	(raw form)	solver.VarEQ{V:parser.Variable{Name:"", Nsp:0}, Value:parser.Number{Num:0, Den:0, Normalized:false}}
1	(checked)	 = 0

2	(original)	0 < 
2	(raw form)	solver.VarGT{V:parser.Variable{Name:"", Nsp:0}, Value:parser.Number{Num:0, Den:0, Normalized:false}}
2	(checked)	0 < 

3	(original)	0 <= 
3	(raw form)	solver.VarGTE{V:parser.Variable{Name:"", Nsp:0}, Value:parser.Number{Num:0, Den:0, Normalized:false}}
3	(checked)	0 <= 

4	(original)	 < 0
4	(raw form)	solver.VarLT{V:parser.Variable{Name:"", Nsp:0}, Value:parser.Number{Num:0, Den:0, Normalized:false}}
4	(checked)	 < 0

5	(original)	 <= 0
5	(raw form)	solver.VarLTE{V:parser.Variable{Name:"", Nsp:0}, Value:parser.Number{Num:0, Den:0, Normalized:false}}
5	(checked)	 <= 0

6	(original)	 is an integer
6	(raw form)	solver.VarINT{V:parser.Variable{Name:"", Nsp:0}}
6	(checked)	 is an integer

7	(original)	 = 
7	(raw form)	solver.VarIsAtom{V:parser.Variable{Name:"", Nsp:0}, A:parser.Atom{Value:""}}
7	(checked)	<nil>

8	(original)	 = "\"\""
8	(raw form)	solver.VarIsString{V:parser.Variable{Name:"", Nsp:0}, S:parser.String{Value:""}}
8	(checked)	<nil>

9	(original)	 = <nil>
9	(raw form)	solver.VarIsCompoundTerm{V:parser.Variable{Name:"", Nsp:0}, T:parser.Term(nil)}
9	(checked)	<nil>

10	(original)	X = <nil>
10	(raw form)	solver.VarIsCompoundTerm{V:parser.Variable{Name:"X", Nsp:0}, T:parser.Term(nil)}
10	(checked)	<nil>

11	(original)	X = <nil>
11	(raw form)	solver.VarIsCompoundTerm{V:parser.Variable{Name:"X", Nsp:0}, T:parser.Term(nil)}
11	(checked)	<nil>

12	(original)	X = X
12	(raw form)	solver.VarIsCompoundTerm{V:parser.Variable{Name:"X", Nsp:0}, T:parser.Variable{Name:"X", Nsp:0}}
12	(checked)	<nil>, error : positive occur check

13	(original)	X = foo()
13	(raw form)	solver.VarIsCompoundTerm{V:parser.Variable{Name:"X", Nsp:0}, T:parser.CompoundTerm{Functor:"foo", Children:[]parser.Term{}}}
13	(checked)	X = foo()

14	(original)	X = toto
14	(raw form)	solver.VarIsAtom{V:parser.Variable{Name:"X", Nsp:0}, A:parser.Atom{Value:"toto"}}
14	(checked)	X = toto

15	(original)	Y$2 = tata
15	(raw form)	solver.VarIsAtom{V:parser.Variable{Name:"Y", Nsp:2}, A:parser.Atom{Value:"tata"}}
15	(checked)	Y$2 = tata

16	(original)	Z$3 = titi
16	(raw form)	solver.VarIsAtom{V:parser.Variable{Name:"Z", Nsp:3}, A:parser.Atom{Value:"titi"}}
16	(checked)	Z$3 = titi

17	(original)	X = X
17	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"X", Nsp:0}, W:parser.Variable{Name:"X", Nsp:0}}
17	(checked)	<nil>

18	(original)	Y = X
18	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"Y", Nsp:0}, W:parser.Variable{Name:"X", Nsp:0}}
18	(checked)	Y = X

19	(original)	X = Y$2
19	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"X", Nsp:0}, W:parser.Variable{Name:"Y", Nsp:2}}
19	(checked)	Y$2 = X

20	(original)	Y = Y$2
20	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"Y", Nsp:0}, W:parser.Variable{Name:"Y", Nsp:2}}
20	(checked)	Y$2 = Y

21	(original)	Z$3 = X
21	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"Z", Nsp:3}, W:parser.Variable{Name:"X", Nsp:0}}
21	(checked)	Z$3 = X

22	(original)	Z$3 = Y$2
22	(raw form)	solver.VarIsVar{V:parser.Variable{Name:"Z", Nsp:3}, W:parser.Variable{Name:"Y", Nsp:2}}
22	(checked)	Z$3 = Y$2